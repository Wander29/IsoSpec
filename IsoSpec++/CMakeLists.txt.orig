# CMake script for IsoSpec++ library
# Author: Filippo Rusconi
# Created: June 2020

<<<<<<< HEAD
message(\n${BoldRed}
    "Now configuring IsoSpec++/ for ${CMAKE_PROJECT_NAME}"
    ${ColourReset}\n)
=======
# modified by Ludovico Venturi, @MolHorizon, 2022/06/13

#message(\n${BoldRed}"Now configuring IsoSpec++/ for ${CMAKE_PROJECT_NAME}"${ColourReset}\n)

cmake_minimum_required(VERSION 3.12...3.23)

project(IsoSpec
    DESCRIPTION "A program to calculate isotopic clusters"
    HOMEPAGE_URL "https://github.com/MatteoLacki/IsoSpec")

set(ISOSPEC_VERSION_MAJOR "2")
set(ISOSPEC_VERSION_MINOR "1")
set(ISOSPEC_VERSION_PATCH "3")
set(ISOSPEC_LIB_NAME "libIsoSpec++")
set(ISOSPEC_VERSION "${ISOSPEC_VERSION_MAJOR}.${ISOSPEC_VERSION_MINOR}.${ISOSPEC_VERSION_PATCH}")
set(VERSION 2.1.3)
set(ISOSPEC_LIB_VERSION ${ISOSPEC_VERSION})
>>>>>>> refs/remotes/origin/cmake-update-ludo

set(isospec_SRCS
	unity-build.cpp
)
<<<<<<< HEAD

=======
>>>>>>> refs/remotes/origin/cmake-update-ludo

# Not sure I understand this. Is this the way to test for MSVS in CMake land ?
if(WIN32 OR _WIN32)

	if(MSVC)
		set(my_sources ${my_sources})
		add_definitions(-DMMAN_LIBRARY)
	endif()

endif()

<<<<<<< HEAD
######### The static library #########
=======
set(CMAKE_INCLUDE_CURRENT_DIR ON)

######### The static library #########

>>>>>>> refs/remotes/origin/cmake-update-ludo
add_library(IsoSpec++-static STATIC ${isospec_SRCS})
add_library(isospec ALIAS IsoSpec++-static)

set_target_properties(IsoSpec++-static
  PROPERTIES OUTPUT_NAME IsoSpec++
  CLEAN_DIRECT_OUTPUT 1
)

target_include_directories(
  IsoSpec++-static
  PUBLIC
<<<<<<< HEAD
    ${CMAKE_CURRENT_SOURCE_DIR}
=======
    .
>>>>>>> refs/remotes/origin/cmake-update-ludo
)

#message(STATUS "ISOSPEC_LIB_VERSION: ${ISOSPEC_LIB_VERSION}")
#message(STATUS "ISOSPEC_LIB_SOVERSION: ${ISOSPEC_LIB_SOVERSION}")

########## The shared library #########
#
#add_library(IsoSpec++-shared SHARED ${isospec_SRCS})
#
#set_target_properties(IsoSpec++-shared
#	PROPERTIES OUTPUT_NAME IsoSpec++
#	CLEAN_DIRECT_OUTPUT 1
#	VERSION ${ISOSPEC_LIB_VERSION}
#	SOVERSION ${ISOSPEC_LIB_SOVERSION}
#	)

<<<<<<< HEAD
## Install both shared and static libs
=======
######### The shared library #########

#add_library(IsoSpec++-shared SHARED ${isospec_SRCS})

#set_target_properties(IsoSpec++-shared
#	PROPERTIES OUTPUT_NAME IsoSpec++
#	CLEAN_DIRECT_OUTPUT 1
#	VERSION ${ISOSPEC_LIB_VERSION}
#	SOVERSION ${ISOSPEC_LIB_SOVERSION}
#	)

# Install both shared and static libs
>>>>>>> refs/remotes/origin/cmake-update-ludo
#
#install(TARGETS IsoSpec++-shared IsoSpec++-static
#	LIBRARY NAMELINK_SKIP
#	DESTINATION ${CMAKE_INSTALL_LIBDIR}
#	# This one is for WIN32
#	RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
#	)


# Do not know how this would still be useful.
# export(TARGETS IsoSpec++ FILE IsoSpecLibrary.cmake)

